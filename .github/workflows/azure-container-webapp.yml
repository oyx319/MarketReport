name: Build and deploy a container to an tencent Web App

env:
  AZURE_WEBAPP_NAME: marketreport  # set this to the name of your tencent Web App

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write  # 添加 packages 写权限

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log in to GitHub container registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}  # 使用 GITHUB_TOKEN 而不是 github.token

      - name: Lowercase the repo name and username
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Build and push container image to registry
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          push: true
          tags: ghcr.io/${{ env.REPO }}:${{ github.sha }}
          file: ./Dockerfile

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: http://49.51.205.118

    steps:
      - name: Lowercase the repo name and username
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Deploy to Tencent Cloud Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: 49.51.205.118
          username: ${{ secrets.TENCENT_SERVER_USERNAME }}
          key: ${{ secrets.TENCENT_SERVER_SSH_KEY }}
          script: |
            # 登录到GitHub Container Registry
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            # 停止并删除旧容器（如果存在）
            docker stop marketreport || true
            docker rm marketreport || true
            
            # 拉取最新镜像
            docker pull ghcr.io/${{ env.REPO }}:${{ github.sha }}
            
            # 运行新容器
            docker run -d \
              --name marketreport \
              -p 3000:3000 \
              --env-file .env \
              --restart unless-stopped \
              ghcr.io/${{ env.REPO }}:${{ github.sha }}
            
            # 清理旧镜像
            docker image prune -f
            # 清理旧容器
            docker container prune -f
